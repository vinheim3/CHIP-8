#sSpot 50
#sYou 52
#sWall 54
#sBox 56
#mLevel 59
$spot sSpot 3
$you sYou 3
$wall sWall 3
$box sBox 3

JP ->load-map

:load solid map using python script
load-map:
	VE = E
	I = mLevel
	I += VE
	I += VE
	V1 = 3
	V2 = 3
	V3 = 3
	V4 = 3
	[I] = VD
	I += VE
	V1 = 0
	V2 = 0
	V3 = 0
	V5 = 3
	V6 = 3
	V7 = 3
	VA = 3
	VB = 3
	[I] = VD
	I += VE
	V4 = 0
	V5 = 0
	V6 = 0
	V7 = 0
	VB = 0
	VC = 2
	[I] = VD
	I += VE
	V3 = 3
	VA = 0
	VC = 0
	[I] = VD
	I += VE
	V2 = 3
	V3 = 0
	V4 = 2
	V6 = 3
	V9 = 3
	[I] = VD
	I += VE
	V2 = 0
	V4 = 0
	V6 = 0
	V7 = 3
	V8 = 3
	V9 = 0
	VA = 3
	VB = 3
	VC = 3
	[I] = VD
	I += VE
	V0 = 3
	V1 = 3
	V7 = 0
	V8 = 0
	VA = 0
	VB = 0
	VC = 0
	VD = 3
	[I] = VD
	I += VE
	V0 = 0
	V1 = 0
	V7 = 3
	VD = 0
	[I] = VD
	I += VE
	V5 = 3
	V7 = 0
	V9 = 3
	VD = 3
	[I] = VD
	I += VE
	V5 = 0
	V9 = 0
	VB = 3
	VC = 3
	[I] = VD
	I += VE
	V0 = 3
	V1 = 3
	V2 = 3
	V3 = 3
	V4 = 3
	V5 = 3
	VB = 0
	VC = 4
	[I] = VC

:load sprites
	V0 = A0
	V1 = 40
	V2 = A0
	V3 = 0
	V4 = E0
	V5 = E0
	V6 = E0
	V7 = A0
	V8 = E0
	I = sSpot
	[I] = V8

:init
	VD = 2
	VE = 1

:draw solid map
	V8 = 0
	V9 = 0
	VA = 0
	V7 = 1
next-node:
	I = mLevel + V8
	V0 = [I]
	if V0 == 4
		JP ->after-draw-map
	if V0 == 0
		JP ->counter
	V0 &= V7
	if V0 == 0
		JP ->draw-box
	I = sWall
	JP ->draw-object
draw-box:
	I = sBox
draw-object:
	VB = VA * 3
	VB += VD
	VC = V9 * 3
	VC += VE
	DRW VB VC 3
counter:
	V8 += 1
	VA += 1
	if VA != 14
		JP ->next-node
	VA = 0
	V9 += 1
	JP ->next-node

after-draw-map:
	V0 = key